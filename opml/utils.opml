<?xml encoding="ISO-8859-1" version="1.0"?>
<!-- OPML generated by OPML Editor v0.75 on 6/9/14; 11:34:16 AM -->
<opml version="2.0">
	<head>
		<title>utils.js</title>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="utils.js">
		<outline text="// Copyright 2013-2014, Small Picture, Inc."></outline>
		<outline text=" "></outline>
		<outline created="Tue, 15 Jan 2013 00:24:33 GMT" pgfnum="17115" text="function sameDay (d1, d2) { ">
			<outline created="Tue, 29 Jan 2013 19:16:02 GMT" pgfnum="17889" text="//returns true if the two dates are on the same day"></outline>
			<outline created="Tue, 15 Jan 2013 00:45:10 GMT" pgfnum="17126" text="d1 = new Date (d1);"></outline>
			<outline created="Tue, 15 Jan 2013 00:45:10 GMT" pgfnum="17126" text="d2 = new Date (d2);"></outline>
			<outline text="return ((d1.getFullYear () == d2.getFullYear ()) &amp;&amp; (d1.getMonth () == d2.getMonth ()) &amp;&amp; (d1.getDate () == d2.getDate ()));"></outline>
			<outline created="Mon, 03 Feb 2014 18:49:54 GMT" pgfnum="36998" text="}"></outline>
			</outline>
		<outline created="Thu, 30 Jan 2014 02:37:47 GMT" pgfnum="36557" text="function stringLower (s) {">
			<outline created="Thu, 30 Jan 2014 02:37:52 GMT" pgfnum="36558" text="return (s.toLowerCase ());"></outline>
			<outline created="Thu, 30 Jan 2014 02:38:01 GMT" pgfnum="36559" text="}"></outline>
			</outline>
		<outline created="Fri, 01 Feb 2013 22:40:26 GMT" pgfnum="18084" text="function secondsSince (when) { ">
			<outline created="Fri, 01 Feb 2013 00:33:21 GMT" pgfnum="18031" text="var now = new Date ();"></outline>
			<outline text="when = new Date (when);"></outline>
			<outline created="Fri, 01 Feb 2013 22:41:19 GMT" pgfnum="18089" text="return ((now - when) / 1000);"></outline>
			<outline created="Mon, 24 Feb 2014 15:51:02 GMT" pgfnum="37929" text="}"></outline>
			</outline>
		<outline created="Thu, 06 Jun 2013 19:04:01 GMT" pgfnum="25297" text="function padWithZeros (num, ctplaces) { ">
			<outline created="Thu, 06 Jun 2013 19:04:50 GMT" pgfnum="25301" text="var s = num.toString ();"></outline>
			<outline created="Thu, 06 Jun 2013 19:04:23 GMT" pgfnum="25299" text="while (s.length &lt; ctplaces) {">
				<outline created="Thu, 06 Jun 2013 19:05:07 GMT" pgfnum="25302" text="s = &quot;0&quot; + s;"></outline>
				<outline created="Thu, 06 Jun 2013 19:04:43 GMT" pgfnum="25300" text="}"></outline>
				</outline>
			<outline created="Thu, 06 Jun 2013 19:12:58 GMT" pgfnum="25311" text="return (s);"></outline>
			<outline created="Thu, 06 Jun 2013 19:04:11 GMT" pgfnum="25298" text="}"></outline>
			</outline>
		<outline created="Wed, 24 Jul 2013 15:22:40 GMT" pgfnum="28194" text="function getDatePath (theDate, flLastSeparator) {">
			<outline created="Wed, 24 Jul 2013 15:23:15 GMT" pgfnum="28196" text="if (theDate == undefined) {">
				<outline created="Wed, 24 Jul 2013 15:23:26 GMT" pgfnum="28197" text="theDate = new Date ();"></outline>
				<outline created="Wed, 24 Jul 2013 15:23:28 GMT" pgfnum="28198" text="}"></outline>
				</outline>
			<outline created="Wed, 24 Jul 2013 15:23:15 GMT" pgfnum="28196" text="if (flLastSeparator == undefined) {">
				<outline created="Wed, 24 Jul 2013 15:23:26 GMT" pgfnum="28197" text="flLastSeparator = true;"></outline>
				<outline created="Wed, 24 Jul 2013 15:23:28 GMT" pgfnum="28198" text="}"></outline>
				</outline>
			<outline created="Wed, 24 Jul 2013 15:29:13 GMT" pgfnum="28201" text=""></outline>
			<outline created="Fri, 15 Jun 2007 22:48:17 GMT" text="var month = padWithZeros (theDate.getMonth () + 1, 2);"></outline>
			<outline created="Fri, 15 Jun 2007 22:48:17 GMT" text="var day = padWithZeros (theDate.getDate (), 2);"></outline>
			<outline created="Wed, 24 Jul 2013 15:27:43 GMT" pgfnum="28199" text="var year = theDate.getFullYear ();"></outline>
			<outline created="Wed, 24 Jul 2013 15:28:02 GMT" pgfnum="28200" text=""></outline>
			<outline text="if (flLastSeparator) {">
				<outline created="Fri, 15 Jun 2007 22:46:16 GMT" text="return (year + &quot;/&quot; + month + &quot;/&quot; + day + &quot;/&quot;);"></outline>
				<outline created="Wed, 24 Jul 2013 15:29:47 GMT" pgfnum="28202" text="}"></outline>
				</outline>
			<outline text="else {">
				<outline created="Fri, 15 Jun 2007 22:46:16 GMT" text="return (year + &quot;/&quot; + month + &quot;/&quot; + day);"></outline>
				<outline created="Wed, 24 Jul 2013 15:29:58 GMT" pgfnum="28203" text="}"></outline>
				</outline>
			<outline created="Wed, 24 Jul 2013 15:23:09 GMT" pgfnum="28195" text="}"></outline>
			</outline>
		<outline text="function multipleReplaceAll (s, adrTable, flCaseSensitive, startCharacters, endCharacters) { ">
			<outline text="if(flCaseSensitive===undefined){">
				<outline text="flCaseSensitive = false;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if(startCharacters===undefined){">
				<outline text="startCharacters=&quot;&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if(endCharacters===undefined){">
				<outline text="endCharacters=&quot;&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="for( var item in adrTable){">
				<outline text="var replacementValue = adrTable[item];"></outline>
				<outline text="var regularExpressionModifier = &quot;g&quot;;"></outline>
				<outline text="if(!flCaseSensitive){">
					<outline text="regularExpressionModifier = &quot;gi&quot;;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="var regularExpressionString = (startCharacters+item+endCharacters).replace(/([.?*+^$[\]\\(){}|-])/g, &quot;\\$1&quot;);"></outline>
				<outline text="var regularExpression = new RegExp(regularExpressionString, regularExpressionModifier);"></outline>
				<outline text="s = s.replace(regularExpression, replacementValue);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return s;"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Wed, 27 Nov 2013 21:58:15 GMT" pgfnum="32470" text="function endsWith (s, possibleEnding, flUnicase) {">
			<outline created="Wed, 01 Jan 2014 23:29:44 GMT" pgfnum="35184" text="if ((s == undefined) || (s.length == 0)) { ">
				<outline created="Wed, 01 Jan 2014 23:29:49 GMT" pgfnum="35185" text="return (false);"></outline>
				<outline created="Wed, 01 Jan 2014 23:29:52 GMT" pgfnum="35186" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 22:09:56 GMT" pgfnum="32496" text="var ixstring = s.length - 1;"></outline>
			<outline created="Wed, 27 Nov 2013 21:59:59 GMT" pgfnum="32482" text="if (flUnicase == undefined) {">
				<outline created="Wed, 27 Nov 2013 22:00:10 GMT" pgfnum="32483" text="flUnicase = true;"></outline>
				<outline created="Wed, 27 Nov 2013 22:00:14 GMT" pgfnum="32484" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 22:00:49 GMT" pgfnum="32485" text="if (flUnicase) {">
				<outline created="Wed, 27 Nov 2013 21:58:48 GMT" pgfnum="32476" text="for (var i = possibleEnding.length - 1; i &gt;= 0; i--) {">
					<outline created="Wed, 27 Nov 2013 21:59:05 GMT" pgfnum="32478" text="if (stringLower (s [ixstring--]) != stringLower (possibleEnding [i])) {">
						<outline created="Wed, 27 Nov 2013 21:59:34 GMT" pgfnum="32479" text="return (false);"></outline>
						<outline created="Wed, 27 Nov 2013 21:59:38 GMT" pgfnum="32480" text="}"></outline>
						</outline>
					<outline created="Wed, 27 Nov 2013 21:59:01 GMT" pgfnum="32477" text="}"></outline>
					</outline>
				<outline created="Wed, 27 Nov 2013 22:00:58 GMT" pgfnum="32486" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 22:01:08 GMT" pgfnum="32487" text="else {">
				<outline created="Wed, 27 Nov 2013 21:58:48 GMT" pgfnum="32476" text="for (var i = possibleEnding.length - 1; i &gt;= 0; i--) {">
					<outline created="Wed, 27 Nov 2013 21:59:05 GMT" pgfnum="32478" text="if (s [ixstring--] != possibleEnding [i]) {">
						<outline created="Wed, 27 Nov 2013 21:59:34 GMT" pgfnum="32479" text="return (false);"></outline>
						<outline created="Wed, 27 Nov 2013 21:59:38 GMT" pgfnum="32480" text="}"></outline>
						</outline>
					<outline created="Wed, 27 Nov 2013 21:59:01 GMT" pgfnum="32477" text="}"></outline>
					</outline>
				<outline created="Wed, 27 Nov 2013 22:01:15 GMT" pgfnum="32488" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 21:59:44 GMT" pgfnum="32481" text="return (true);"></outline>
			<outline created="Wed, 27 Nov 2013 21:58:43 GMT" pgfnum="32475" text="}"></outline>
			</outline>
		<outline created="Wed, 27 Nov 2013 21:58:15 GMT" pgfnum="32470" text="function beginsWith (s, possibleBeginning, flUnicase) { ">
			<outline created="Wed, 01 Jan 2014 23:29:44 GMT" pgfnum="35184" text="if (s.length == 0) { //1/1/14 by DW">
				<outline created="Wed, 01 Jan 2014 23:29:49 GMT" pgfnum="35185" text="return (false);"></outline>
				<outline created="Wed, 01 Jan 2014 23:29:52 GMT" pgfnum="35186" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 21:59:59 GMT" pgfnum="32482" text="if (flUnicase == undefined) {">
				<outline created="Wed, 27 Nov 2013 22:00:10 GMT" pgfnum="32483" text="flUnicase = true;"></outline>
				<outline created="Wed, 27 Nov 2013 22:00:14 GMT" pgfnum="32484" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 22:00:49 GMT" pgfnum="32485" text="if (flUnicase) {">
				<outline created="Wed, 27 Nov 2013 21:58:48 GMT" pgfnum="32476" text="for (var i = 0; i &lt; possibleBeginning.length; i++) {">
					<outline created="Wed, 27 Nov 2013 21:59:05 GMT" pgfnum="32478" text="if (stringLower (s [i]) != stringLower (possibleBeginning [i])) {">
						<outline created="Wed, 27 Nov 2013 21:59:34 GMT" pgfnum="32479" text="return (false);"></outline>
						<outline created="Wed, 27 Nov 2013 21:59:38 GMT" pgfnum="32480" text="}"></outline>
						</outline>
					<outline created="Wed, 27 Nov 2013 21:59:01 GMT" pgfnum="32477" text="}"></outline>
					</outline>
				<outline created="Wed, 27 Nov 2013 22:00:58 GMT" pgfnum="32486" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 22:01:08 GMT" pgfnum="32487" text="else {">
				<outline created="Wed, 27 Nov 2013 21:58:48 GMT" pgfnum="32476" text="for (var i = 0; i &lt; possibleBeginning.length; i++) {">
					<outline created="Wed, 27 Nov 2013 21:59:05 GMT" pgfnum="32478" text="if (s [i] != possibleBeginning [i]) {">
						<outline created="Wed, 27 Nov 2013 21:59:34 GMT" pgfnum="32479" text="return (false);"></outline>
						<outline created="Wed, 27 Nov 2013 21:59:38 GMT" pgfnum="32480" text="}"></outline>
						</outline>
					<outline created="Wed, 27 Nov 2013 21:59:01 GMT" pgfnum="32477" text="}"></outline>
					</outline>
				<outline created="Wed, 27 Nov 2013 22:01:15 GMT" pgfnum="32488" text="}"></outline>
				</outline>
			<outline created="Wed, 27 Nov 2013 21:59:44 GMT" pgfnum="32481" text="return (true);"></outline>
			<outline created="Wed, 27 Nov 2013 21:58:43 GMT" pgfnum="32475" text="}"></outline>
			</outline>
		<outline created="Wed, 23 Jan 2013 15:16:34 GMT" pgfnum="17539" text="function isAlpha (ch) {">
			<outline created="Wed, 23 Jan 2013 15:17:06 GMT" pgfnum="17541" text="return (((ch &gt;= 'a') &amp;&amp; (ch &lt;= 'z')) || ((ch &gt;= 'A') &amp;&amp; (ch &lt;= 'Z')));"></outline>
			<outline created="Mon, 20 Jan 2014 04:13:24 GMT" pgfnum="35962" text="}"></outline>
			</outline>
		<outline created="Wed, 22 Jan 2014 15:27:48 GMT" pgfnum="36287" text="function isNumeric (ch) {">
			<outline created="Wed, 22 Jan 2014 15:27:56 GMT" pgfnum="36289" text="return ((ch &gt;= '0') &amp;&amp; (ch &lt;= '9'));"></outline>
			<outline created="Wed, 22 Jan 2014 15:27:53 GMT" pgfnum="36288" text="}"></outline>
			</outline>
		<outline created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129" text="function trimLeading (s, ch) {">
			<outline text="while (s.charAt (0) === ch) {">
				<outline text="s = s.substr (1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133" text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129" text="function trimTrailing (s, ch) { ">
			<outline text="while (s.charAt (s.length - 1) === ch) {">
				<outline text="s = s.substr (0, s.length - 1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133" text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Mon, 11 Mar 2013 02:50:58 GMT" pgfnum="20134" text="function trimWhitespace (s) { //rewrite -- 5/30/14 by DW">
			<outline text="function isWhite (ch) {">
				<outline text="switch (ch) {">
					<outline text="case &quot; &quot;: case &quot;\r&quot;: case &quot;\n&quot;: case &quot;\t&quot;:">
						<outline text="return (true);"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="return (false);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (isWhite (s.charAt (0))) {">
				<outline text="s = s.substr (1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (s.length &gt; 0) {">
				<outline text="if (!isWhite (s.charAt (0))) {">
					<outline text="break;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="s = s.substr (1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (s.length &gt; 0) {">
				<outline text="if (!isWhite (s.charAt (s.length - 1))) {">
					<outline text="break;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="s = s.substr (0, s.length - 1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function addPeriodAtEnd (s) {">
			<outline isComment="true" text="Changes">
				<outline text="5/8/14; 11:02:16 AM by DW">
					<outline text="Call this if you want to add a period at the end of a string, but want to avoid doing it if there already is one, or another punctuation char."></outline>
					</outline>
				</outline>
			<outline text="s = trimWhitespace (s);"></outline>
			<outline text="if (s.length == 0) {">
				<outline text="return (s);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="switch (s [s.length - 1]) {">
				<outline text="case &quot;.&quot;:"></outline>
				<outline text="case &quot;,&quot;:"></outline>
				<outline text="case &quot;?&quot;:"></outline>
				<outline text="case &quot;\&quot;&quot;:"></outline>
				<outline text="case &quot;'&quot;:"></outline>
				<outline text="case &quot;:&quot;:"></outline>
				<outline text="case &quot;;&quot;:"></outline>
				<outline text="case &quot;!&quot;:">
					<outline text="return (s);"></outline>
					</outline>
				<outline text="default:">
					<outline text="return (s + &quot;.&quot;);"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Thu, 05 Dec 2013 13:36:54 GMT" pgfnum="33203" text="function getBoolean (val) { //12/5/13 by DW">
			<outline created="Thu, 05 Dec 2013 13:53:35 GMT" isComment="true" pgfnum="33230" text="Changes">
				<outline created="Thu, 05 Dec 2013 13:53:37 GMT" pgfnum="33231" text="12/5/13; 8:53:38 AM by DW">
					<outline created="Thu, 05 Dec 2013 13:53:39 GMT" pgfnum="33232" text="Created. Use this to get a boolean value from something that might not be a boolean. "></outline>
					<outline created="Thu, 05 Dec 2013 13:54:18 GMT" pgfnum="33233" text="For example, &quot;false&quot; should be the boolean value false, but in JavaScript, it's true. "></outline>
					<outline created="Thu, 05 Dec 2013 13:54:42 GMT" pgfnum="33234" text="So pass it through this routine to be safe. "></outline>
					</outline>
				</outline>
			<outline created="Thu, 05 Dec 2013 13:38:37 GMT" pgfnum="33207" text="switch (typeof (val)) {">
				<outline created="Thu, 05 Dec 2013 13:38:50 GMT" pgfnum="33209" text="case &quot;string&quot;:">
					<outline created="Thu, 05 Dec 2013 13:39:59 GMT" pgfnum="33215" text="if (val.toLowerCase () == &quot;true&quot;) {">
						<outline created="Thu, 05 Dec 2013 13:40:47 GMT" pgfnum="33219" text="return (true);"></outline>
						<outline created="Thu, 05 Dec 2013 13:40:32 GMT" pgfnum="33216" text="}"></outline>
						</outline>
					<outline created="Thu, 05 Dec 2013 13:40:55 GMT" pgfnum="33220" text="break;"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:38:57 GMT" pgfnum="33211" text="case &quot;boolean&quot;:">
					<outline created="Thu, 05 Dec 2013 13:41:03 GMT" pgfnum="33221" text="return (val);"></outline>
					<outline created="Thu, 05 Dec 2013 13:39:01 GMT" pgfnum="33212" text="break;"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:39:46 GMT" pgfnum="33213" text="case &quot;number&quot;:">
					<outline created="Thu, 05 Dec 2013 13:41:11 GMT" pgfnum="33222" text="if (val == 1) {">
						<outline created="Thu, 05 Dec 2013 13:41:16 GMT" pgfnum="33223" text="return (true);"></outline>
						<outline created="Thu, 05 Dec 2013 13:41:19 GMT" pgfnum="33224" text="}"></outline>
						</outline>
					<outline created="Thu, 05 Dec 2013 13:39:50 GMT" pgfnum="33214" text="break;"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:38:45 GMT" pgfnum="33208" text="}"></outline>
				</outline>
			<outline created="Thu, 05 Dec 2013 13:41:34 GMT" pgfnum="33225" text="return (false);"></outline>
			<outline created="Thu, 05 Dec 2013 13:37:02 GMT" pgfnum="33206" text="}"></outline>
			</outline>
		<outline created="Sat, 10 May 2014 02:46:43 GMT" pgfnum="41378" text="function bumpUrlString (s) { //5/10/14 by DW">
			<outline created="Sat, 10 May 2014 21:25:03 GMT" isComment="true" pgfnum="41466" text="Changes">
				<outline created="Sat, 10 May 2014 21:25:05 GMT" pgfnum="41467" text="5/10/14; 5:25:06 PM by DW">
					<outline created="Sat, 10 May 2014 21:25:06 GMT" pgfnum="41468" text="Generate file names suitable for short URL generating. "></outline>
					</outline>
				</outline>
			<outline created="Sat, 10 May 2014 21:25:40 GMT" pgfnum="41469" text="if (s == undefined) {">
				<outline created="Sat, 10 May 2014 21:25:45 GMT" pgfnum="41470" text="s = &quot;0&quot;;"></outline>
				<outline created="Sat, 10 May 2014 21:25:49 GMT" pgfnum="41471" text="}"></outline>
				</outline>
			<outline created="Sat, 10 May 2014 02:47:05 GMT" pgfnum="41383" text="function bumpChar (ch) {">
				<outline created="Sat, 10 May 2014 03:19:41 GMT" pgfnum="41421" text="function num (ch) {">
					<outline created="Sat, 10 May 2014 03:19:55 GMT" pgfnum="41427" text="return (ch.charCodeAt (0));"></outline>
					<outline created="Sat, 10 May 2014 03:19:51 GMT" pgfnum="41426" text="}"></outline>
					</outline>
				<outline created="Sat, 10 May 2014 02:47:13 GMT" pgfnum="41385" text="if ((ch &gt;= &quot;0&quot;) &amp;&amp; (ch &lt;= &quot;8&quot;)) {">
					<outline created="Sat, 10 May 2014 03:00:43 GMT" pgfnum="41411" text="ch = String.fromCharCode (num (ch) + 1);"></outline>
					<outline created="Sat, 10 May 2014 02:47:44 GMT" pgfnum="41386" text="}"></outline>
					</outline>
				<outline created="Sat, 10 May 2014 02:48:17 GMT" pgfnum="41388" text="else {">
					<outline created="Sat, 10 May 2014 02:48:31 GMT" pgfnum="41390" text="if (ch == &quot;9&quot;) {">
						<outline created="Sat, 10 May 2014 02:48:48 GMT" pgfnum="41394" text="ch = &quot;a&quot;;"></outline>
						<outline created="Sat, 10 May 2014 02:48:38 GMT" pgfnum="41391" text="}"></outline>
						</outline>
					<outline created="Sat, 10 May 2014 02:48:39 GMT" pgfnum="41392" text="else {">
						<outline created="Tue, 03 Jun 2008 00:59:01 GMT" text="if ((ch &gt;= &quot;a&quot;) &amp;&amp; (ch &lt;= &quot;y&quot;)) {">
							<outline created="Sat, 10 May 2014 03:00:43 GMT" pgfnum="41411" text="ch = String.fromCharCode (num (ch) + 1);"></outline>
							<outline created="Sat, 10 May 2014 02:49:23 GMT" pgfnum="41395" text="}"></outline>
							</outline>
						<outline created="Tue, 03 Jun 2008 00:59:59 GMT" text="else {">
							<outline created="Tue, 03 Jun 2008 01:00:01 GMT" text="throw &quot;rollover!&quot;;"></outline>
							<outline created="Sat, 10 May 2014 02:49:35 GMT" pgfnum="41396" text="}"></outline>
							</outline>
						<outline created="Sat, 10 May 2014 02:48:41 GMT" pgfnum="41393" text="}"></outline>
						</outline>
					<outline created="Sat, 10 May 2014 02:48:19 GMT" pgfnum="41389" text="}"></outline>
					</outline>
				<outline created="Sat, 10 May 2014 03:06:40 GMT" pgfnum="41414" text="return (ch);"></outline>
				<outline created="Sat, 10 May 2014 02:47:10 GMT" pgfnum="41384" text="}"></outline>
				</outline>
			<outline created="Sat, 10 May 2014 02:50:53 GMT" pgfnum="41398" text="try {">
				<outline created="Tue, 03 Jun 2008 02:57:46 GMT" text="var chlast = bumpChar (s [s.length - 1]);"></outline>
				<outline created="Sat, 10 May 2014 03:10:19 GMT" pgfnum="41415" text="s = s.substr (0, s.length - 1) + chlast;"></outline>
				<outline created="Sat, 10 May 2014 02:53:18 GMT" pgfnum="41402" text="return (s);"></outline>
				<outline created="Sat, 10 May 2014 02:50:55 GMT" pgfnum="41399" text="}"></outline>
				</outline>
			<outline created="Sat, 10 May 2014 02:50:56 GMT" pgfnum="41400" text="catch (tryError) {">
				<outline created="Sat, 10 May 2014 13:11:43 GMT" pgfnum="41447" text="if (s.length == 1) {">
					<outline created="Sat, 10 May 2014 13:11:56 GMT" pgfnum="41452" text="return (&quot;00&quot;);"></outline>
					<outline created="Sat, 10 May 2014 13:11:51 GMT" pgfnum="41451" text="}"></outline>
					</outline>
				<outline created="Sat, 10 May 2014 13:12:08 GMT" pgfnum="41453" text="else {">
					<outline created="Sat, 10 May 2014 13:12:34 GMT" pgfnum="41455" text="s = s.substr (0, s.length - 1);"></outline>
					<outline created="Sat, 10 May 2014 13:13:16 GMT" pgfnum="41456" text="s = bumpString (s) + &quot;0&quot;;"></outline>
					<outline created="Sat, 10 May 2014 13:13:35 GMT" pgfnum="41457" text="return (s);"></outline>
					<outline created="Sat, 10 May 2014 13:12:11 GMT" pgfnum="41454" text="}"></outline>
					</outline>
				<outline created="Sat, 10 May 2014 02:51:11 GMT" pgfnum="41401" text="}"></outline>
				</outline>
			<outline created="Sat, 10 May 2014 02:46:52 GMT" pgfnum="41382" text="}"></outline>
			</outline>
		<outline text="function stringDelete (s, ix, ct) {">
			<outline text="var start = ix - 1;"></outline>
			<outline text="var end = (ix + ct) - 1;"></outline>
			<outline text="var s1 = s.substr (0, start);"></outline>
			<outline text="var s2 = s.substr (end);"></outline>
			<outline text="return (s1 + s2);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Sat, 27 Jul 2013 18:16:06 GMT" pgfnum="28354" text="function replaceAll (s, searchfor, replacewith) {">
			<outline text="function escapeRegExp (string) {">
				<outline text="return string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, &quot;\\$1&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s.replace (new RegExp (escapeRegExp (searchfor), 'g'), replacewith));"></outline>
			<outline created="Sat, 27 Jul 2013 18:16:17 GMT" pgfnum="28355" text="}"></outline>
			</outline>
		<outline created="Thu, 25 Jul 2013 21:49:37 GMT" pgfnum="28268" text="function stringCountFields (s, chdelim) {">
			<outline created="Thu, 25 Jul 2013 21:54:58 GMT" pgfnum="28275" text="var ct = 1;"></outline>
			<outline created="Thu, 25 Jul 2013 21:54:45 GMT" pgfnum="28272" text="if (s.length == 0) {">
				<outline created="Thu, 25 Jul 2013 21:54:50 GMT" pgfnum="28273" text="return (0);"></outline>
				<outline created="Thu, 25 Jul 2013 21:54:54 GMT" pgfnum="28274" text="}"></outline>
				</outline>
			<outline created="Thu, 25 Jul 2013 21:50:20 GMT" pgfnum="28270" text="for (var i = 0; i &lt; s.length; i++) {">
				<outline text="if (s [i] == chdelim) {">
					<outline text="ct++;"></outline>
					<outline created="Thu, 25 Jul 2013 21:55:55 GMT" pgfnum="28276" text="}"></outline>
					</outline>
				<outline created="Thu, 25 Jul 2013 21:50:33 GMT" pgfnum="28271" text="}"></outline>
				</outline>
			<outline created="Thu, 25 Jul 2013 21:56:01 GMT" pgfnum="28277" text="return (ct)"></outline>
			<outline created="Thu, 25 Jul 2013 21:49:45 GMT" pgfnum="28269" text="}"></outline>
			</outline>
		<outline text="function stringNthField (s, chdelim, n) {">
			<outline text="var splits = s.split (chdelim);"></outline>
			<outline text="if (splits.length &gt;= n) {">
				<outline text="return splits [n-1];"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (&quot;&quot;);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function dateYesterday (d) {">
			<outline text="return (new Date (new Date (d) - (24 * 60 * 60 * 1000)));"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function stripMarkup (s) { //5/24/14 by DW">
			<outline isComment="true" text="Changes">
				<outline text="6/9/14; 11:33:37 AM by DW">
					<outline text="River4 is crashing when we pass null to stripMarkup. So add some defensive driving."></outline>
					</outline>
				</outline>
			<outline text="if ((s === undefined) || (s == null) || (s.length == 0)) {">
				<outline text="return (&quot;&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s.replace (/(&lt;([^&gt;]+)&gt;)/ig, &quot;&quot;));"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function maxStringLength (s, len, flWholeWordAtEnd, flAddElipses) {">
			<outline text="if (flWholeWordAtEnd == undefined) {">
				<outline text="flWholeWordAtEnd = true;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if (flAddElipses == undefined) { //6/2/14 by DW">
				<outline text="flAddElipses = true;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if (s.length &gt; len) {">
				<outline text="s = s.substr (0, len);"></outline>
				<outline text="if (flWholeWordAtEnd) {">
					<outline text="while (s.length &gt; 0) {">
						<outline text="if (s [s.length - 1] == &quot; &quot;) {">
							<outline text="if (flAddElipses) {">
								<outline text="s += &quot;...&quot;;"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="break;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="s = s.substr (0, s.length - 1); //pop last char"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Wed, 23 Jan 2013 15:25:16 GMT" pgfnum="17547" text="function random (lower, upper) {">
			<outline created="Wed, 23 Jan 2013 15:33:00 GMT" pgfnum="17559" text="var range = upper - lower + 1;"></outline>
			<outline text="return (Math.floor ((Math.random () * range) + lower));"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function stringAddCommas (x) { //5/27/14 by DW">
			<outline isComment="true" text="Changes">
				<outline text="5/27/14; 8:29:32 AM by DW">
					<outline text="Created. Pass in a number, and we'll return a string with commas added."></outline>
					</outline>
				</outline>
			<outline text="return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &quot;,&quot;);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function readHttpFile (url, callback) { //5/27/14 by DW">
			<outline isComment="true" text="Changes">
				<outline text="5/29/14; 11:13:28 AM by DW">
					<outline text="On error, call the callback with an undefined parameter."></outline>
					</outline>
				<outline text="5/27/14; 8:31:21 AM by DW">
					<outline text="Simple asynchronous file read over http."></outline>
					</outline>
				</outline>
			<outline text="var jxhr = $.ajax ({ ">
				<outline text="url: url,"></outline>
				<outline text="dataType: &quot;text&quot; , "></outline>
				<outline text="timeout: 30000 "></outline>
				<outline text="}) "></outline>
				</outline>
			<outline text=".success (function (data, status) { ">
				<outline text="callback (data);"></outline>
				<outline text="}) "></outline>
				</outline>
			<outline text=".error (function (status) { ">
				<outline created="Sun, 13 Jan 2013 14:34:21 GMT" pgfnum="17098" text="console.log (&quot;readHttpFile: url == &quot; + url + &quot;, error == &quot; + status.statusText + &quot;.&quot;);"></outline>
				<outline text="callback (undefined);"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Tue, 03 Dec 2013 17:49:28 GMT" pgfnum="32988" text="function stringPopLastField (s, chdelim) { //5/28/14 by DW">
			<outline created="Tue, 03 Dec 2013 15:52:55 GMT" pgfnum="32931" text="if (s.length == 0) {">
				<outline created="Tue, 03 Dec 2013 15:53:04 GMT" pgfnum="32934" text="return (s);"></outline>
				<outline created="Tue, 03 Dec 2013 15:53:10 GMT" pgfnum="32935" text="}"></outline>
				</outline>
			<outline created="Tue, 03 Dec 2013 15:53:15 GMT" pgfnum="32937" text="if (endsWith (s, chdelim)) {">
				<outline created="Tue, 03 Dec 2013 15:53:31 GMT" pgfnum="32939" text="s = stringDelete (s, s.length, 1);"></outline>
				<outline created="Tue, 03 Dec 2013 15:53:28 GMT" pgfnum="32938" text="}"></outline>
				</outline>
			<outline created="Tue, 03 Dec 2013 15:52:18 GMT" pgfnum="32926" text="while (s.length &gt; 0) {">
				<outline created="Tue, 03 Dec 2013 15:53:15 GMT" pgfnum="32937" text="if (endsWith (s, chdelim)) {">
					<outline created="Tue, 03 Dec 2013 15:55:08 GMT" pgfnum="32940" text="return (stringDelete (s, s.length, 1));"></outline>
					<outline created="Tue, 03 Dec 2013 15:53:28 GMT" pgfnum="32938" text="}"></outline>
					</outline>
				<outline created="Tue, 03 Dec 2013 15:55:08 GMT" pgfnum="32940" text="s = stringDelete (s, s.length, 1);"></outline>
				<outline created="Tue, 03 Dec 2013 15:52:30 GMT" pgfnum="32927" text="}"></outline>
				</outline>
			<outline created="Tue, 03 Dec 2013 15:52:34 GMT" pgfnum="32928" text="return (s);"></outline>
			<outline created="Tue, 03 Dec 2013 17:49:55 GMT" pgfnum="32993" text="}"></outline>
			</outline>
		<outline text="function filledString (ch, ct) { //6/4/14 by DW">
			<outline text="var s = &quot;&quot;;"></outline>
			<outline text="for (var i = 0; i &lt; ct; i++) {">
				<outline text="s += ch;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text=""></outline>
		</body>
	</opml>
